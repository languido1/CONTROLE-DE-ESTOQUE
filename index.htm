<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Controle de Estoque | Óticas Diniz</title>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet"/>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"/>
  <style>
    :root {
      --primary: #2a4365;
      --secondary: #4299e1;
      --light: #ebf8ff;
      --dark: #1a365d;
      --success: #48bb78;
      --warning: #ed8936;
    }
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Montserrat', sans-serif; background-color: #f0f4f8; color: #2d3748; line-height: 1.6; }

    /* LOGIN */
    #login-container { display: flex; justify-content: center; align-items: center; height: 100vh; }
    #loginForm { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); text-align: center; width: 320px; }
    #loginForm h2 { margin-bottom: 20px; color: var(--primary); }
    #loginForm input { width: 100%; padding: 10px; margin: 8px 0; border: 1px solid #ccc; border-radius: 6px; }
    #loginForm button { width: 100%; padding: 10px; background: var(--secondary); color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 600; margin-top: 10px; }
    #loginForm button:hover { background: var(--primary); }
    .error-msg { color: red; font-size: 14px; margin-top: 10px; min-height: 18px; }

    /* DASHBOARD */
    .container { max-width: 1200px; margin: 0 auto; padding: 20px; display: none; }
    header { display: flex; justify-content: space-between; align-items: center; padding: 20px 0; border-bottom: 1px solid #e2e8f0; margin-bottom: 30px; }
    .logo { display: flex; align-items: center; gap: 15px; }
    .logo h1 { font-size: 24px; font-weight: 700; }
    .logo h1 span { color: var(--secondary); font-weight: 600; }
    .user-menu { display: flex; align-items: center; gap: 10px; cursor: pointer; }
    .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
    .section-header h2 { font-size: 20px; color: var(--primary); }
    .section-header h2 i { margin-right: 10px; color: var(--secondary); }

    .search-box { position: relative; width: 250px; }
    .search-box i { position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: #a0aec0; }
    .search-box input { width: 100%; padding: 10px 15px 10px 35px; border: 1px solid #e2e8f0; border-radius: 6px; font-size: 14px; }

    .grid-container { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 20px; }
    .store-card { background: white; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05); transition: all 0.3s ease; cursor: pointer; }
    .store-card:hover { transform: translateY(-3px); box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1); }
    .store-card h3 { font-size: 18px; margin-bottom: 10px; color: var(--primary); }
    .store-card p { color: #718096; font-size: 14px; }

    .frame-card { background: white; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05); }
    .frame-card h4 { font-size: 16px; margin-bottom: 5px; color: var(--primary); }
    .frame-card p { font-size: 14px; color: #718096; margin-bottom: 5px; }
    .frame-card .frame-price { font-weight: 600; color: var(--dark); }

    .btn-back { background: var(--light); color: var(--primary); border: none; padding: 8px 15px; border-radius: 6px; cursor: pointer; display: flex; align-items: center; gap: 5px; font-weight: 600; }
    .btn-back:hover { background: #bee3f8; }
    .actions { display: flex; align-items: center; gap: 15px; }

    footer { text-align: center; padding: 20px 0; margin-top: 40px; border-top: 1px solid #e2e8f0; color: #718096; font-size: 14px; }

    #armacoes-container { display: none; }
    .active-section { display: block !important; animation: fadeIn 0.3s ease; }
    @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }

    /* Estilo para filtros */
    .filters { display: flex; flex-wrap: wrap; gap: 12px; margin: 15px 0; }
    .filters select { padding: 8px; border: 1px solid #ccc; border-radius: 6px; font-size: 14px; background: white; cursor: pointer; }
    .filters select:hover { border-color: #4299e1; }

    /* Modal */
    .modal { position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); display: flex; justify-content: center; align-items: center; z-index: 1000; }
    .modal-content { background: white; padding: 25px; border-radius: 8px; width: 90%; max-width: 600px; max-height: 80vh; overflow-y: auto; }
    .modal-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
    .modal-header h2 { color: var(--primary); }
    .close-modal { background: none; border: none; font-size: 24px; cursor: pointer; color: #718096; }
    .modal-table { width: 100%; border-collapse: collapse; margin: 15px 0; }
    .modal-table th, .modal-table td { padding: 10px; text-align: left; border-bottom: 1px solid #e2e8f0; }
    .modal-table th { background: var(--light); font-weight: 600; }
    .modal-form { margin-top: 20px; }
    .modal-form input { width: 100%; padding: 8px; margin: 5px 0; border: 1px solid #ccc; border-radius: 4px; }
    .modal-form button { background: var(--secondary); color: white; border: none; padding: 10px 15px; border-radius: 4px; cursor: pointer; margin-top: 10px; }
  </style>
</head>
<body>
  <!-- LOGIN -->
  <div id="login-container">
    <form id="loginForm" onsubmit="processarLogin(event)">
      <h2>🔒 Acesso Restrito</h2>
      <input id="usuario" type="text" placeholder="Usuário" required />
      <input id="senha" type="password" placeholder="Senha" required />
      <button type="submit">Entrar</button>
      <p id="errorMsg" class="error-msg"></p>
    </form>
  </div>

  <!-- DASHBOARD -->
  <div id="dashboard" class="container">
    <header class="dashboard-header">
      <div class="logo">
        <h1>Controle de <span>Estoque</span></h1>
      </div>
      <div class="user-menu">
        <span class="username">Usuário</span>
        <i class="fas fa-user-circle"></i>
      </div>
    </header>
    <main class="content">
      <div id="lojas-container" class="active-section">
        <div class="section-header">
          <h2><i class="fas fa-store"></i> Nossas Lojas</h2>
          <div class="search-box">
            <i class="fas fa-search"></i>
            <input id="search-store" type="text" placeholder="Buscar loja..." onkeyup="filtrarLojas()" />
          </div>
        </div>
        <div id="lojas-list" class="grid-container"></div>
      </div>

      <div id="armacoes-container">
        <div class="section-header">
          <h2><i class="fas fa-glasses"></i> Armações: <span id="current-store-name"></span></h2>
          <div class="actions">
            <button id="back-to-stores" class="btn-back"><i class="fas fa-arrow-left"></i> Voltar</button>
            <div class="search-box">
              <i class="fas fa-search"></i>
              <input id="search-frame" type="text" placeholder="Buscar armação..." onkeyup="filtrarArmacoes()" />
            </div>
          </div>
        </div>

        <!-- FILTROS -->
        <div class="filters">
          <select id="filter-brand" onchange="filtrarArmacoes()">
            <option value="">Todas as Marcas</option>
          </select>
          <select id="filter-category" onchange="filtrarArmacoes()">
            <option value="">Todas as Categorias</option>
          </select>
          <select id="filter-price" onchange="filtrarArmacoes()">
            <option value="">Todos os Preços</option>
            <option value="0-199">Até R$ 199</option>
            <option value="200-299">R$ 200 a R$ 299</option>
            <option value="300-399">R$ 300 a R$ 399</option>
            <option value="400-9999">Acima de R$ 400</option>
          </select>
          <select id="filter-quantity" onchange="filtrarArmacoes()">
            <option value="">Todas as Quantidades</option>
            <option value="1-5">1 a 5</option>
            <option value="6-10">6 a 10</option>
            <option value="11-999">Mais de 10</option>
          </select>
        </div>
        <div id="armacoes-list" class="grid-container"></div>

        <!-- FORMULÁRIO PARA CADASTRAR / ATUALIZAR -->
        <div id="cadastro-armacao" style="margin:20px 0; background:#fff; padding:15px; border-radius:8px; box-shadow:0 2px 6px rgba(0,0,0,0.1);">
          <h3 style="margin-bottom:10px; color:#2a4365;">➕ Cadastrar / Atualizar Armação</h3>
          <form id="formArmacao" onsubmit="salvarArmacao(event)">
            <input type="text" id="empresa" placeholder="Empresa (Ex: DNIZ PRIMITIVA I)" required style="margin:5px; padding:8px;">
            <input type="text" id="marca" placeholder="Marca" required style="margin:5px; padding:8px;">
            <input type="text" id="modelo" placeholder="Modelo" required style="margin:5px; padding:8px;">
            <input type="number" id="quantidade" placeholder="Quantidade" required style="margin:5px; padding:8px;">
            <select id="acao" style="margin:5px; padding:8px;">
              <option value="add">Cadastrar Novo</option>
              <option value="update">Entrada / Saída</option>
            </select>
            <button type="submit" style="margin:5px; padding:8px 15px; background:#4299e1; color:#fff; border:none; border-radius:6px; cursor:pointer;">Salvar</button>
          </form>
          <p id="msgRetorno" style="margin-top:10px; font-weight:600;"></p>
        </div>
      </div>
    </main>
    <footer class="dashboard-footer">
      <p>Sistema de Controle de Estoque v1.0</p>
      <p>© 2025 Diniz Óticas - Todos os direitos reservados</p>
    </footer>
  </div>

  <script>
    const API_URL = "https://script.google.com/macros/s/AKfycbxFGsap0ifhvlK4WuyyGpMAVatErHO-taoFjaMEqqygZ3vSLgE0Qx_4OhWluzVpmGn8sA/exec";
    let dadosLojas = {};
    let usuarioLogado = null;
    let lojaAtual = null;

    // ========== FUNÇÕES DE AUTENTICAÇÃO ==========
    function processarLogin(event) {
      event.preventDefault();
      const usuario = document.getElementById('usuario').value;
      const senha = document.getElementById('senha').value;
      const errorMsg = document.getElementById('errorMsg');

      // Credenciais fixas para demonstração
      if (usuario === 'admin' && senha === '1234') {
        usuarioLogado = usuario;
        document.getElementById('login-container').style.display = 'none';
        document.getElementById('dashboard').style.display = 'block';
        document.querySelector('.username').textContent = usuario;
        
        // Carregar dados ao fazer login
        carregarDados().then(() => {
          carregarLojas();
        });
        
        errorMsg.textContent = '';
      } else {
        errorMsg.textContent = 'Usuário ou senha incorretos!';
      }
    }

    // ========== FUNÇÕES DE DADOS ==========
    function salvarLocal() {
      localStorage.setItem("dadosLojas", JSON.stringify(dadosLojas));
    }

    async function carregarDados() {
      try {
        const response = await fetch(API_URL);
        const dadosPlanilha = await response.json();
        
        dadosLojas = {};
        dadosPlanilha.forEach(item => {
          const loja = item.Empresa || item.loja;
          if (!dadosLojas[loja]) dadosLojas[loja] = [];
          
          dadosLojas[loja].push({
            modelo: item.Modelo || item.modelo,
            marca: item.Marca || item.marca,
            quantidade: item.Saldo || item.quantidade,
            preco: item.Preço || item.preco,
            categoria: item.Categoria || item.categoria
          });
        });
        
        salvarLocal();
        console.log('Dados carregados:', dadosLojas);
      } catch (err) {
        console.warn("Erro ao carregar da planilha, usando localStorage:", err);
        dadosLojas = JSON.parse(localStorage.getItem("dadosLojas")) || {};
        
        // Dados de exemplo caso não tenha nada
        if (Object.keys(dadosLojas).length === 0) {
          dadosLojas = {
            "DNIZ PRIMITIVA I": [
              { modelo: "Ray-Ban Aviador", marca: "Ray-Ban", quantidade: 15, preco: "R$ 350,00", categoria: "Luxo" },
              { modelo: "Oakley Holbrook", marca: "Oakley", quantidade: 8, preco: "R$ 280,00", categoria: "Esportiva" }
            ],
            "DNIZ CENTRO": [
              { modelo: "Charmant Elegance", marca: "Charmant", quantidade: 12, preco: "R$ 190,00", categoria: "Acetato" },
              { modelo: "Silhouette Titan", marca: "Silhouette", quantidade: 5, preco: "R$ 420,00", categoria: "Luxo" }
            ]
          };
          salvarLocal();
        }
      }
    }

    async function salvarNaPlanilha(armacao) {
      // Salvar no localStorage primeiro
      const lojaId = armacao.loja;
      if (!dadosLojas[lojaId]) dadosLojas[lojaId] = [];
      
      if (armacao.action === "add") {
        dadosLojas[lojaId].push({
          modelo: armacao.modelo,
          marca: armacao.marca,
          quantidade: armacao.quantidade,
          preco: "R$ 0,00", // Valor padrão
          categoria: "Geral" // Categoria padrão
        });
      }
      
      salvarLocal();

      // Tentar salvar na planilha
      try {
        const response = await fetch(API_URL, {
          method: "POST",
          body: JSON.stringify(armacao),
          headers: { "Content-Type": "application/json" }
        });
        const resultado = await response.json();
        console.log("Resposta da planilha:", resultado);
        return resultado;
      } catch (err) {
        console.error("Erro ao salvar na planilha, mas salvo no localStorage:", err);
        return { status: "error", message: "Erro de conexão" };
      }
    }

    // ========== FUNÇÕES DA INTERFACE ==========
    function carregarLojas() {
      const lojasList = document.getElementById('lojas-list');
      const lojas = Object.keys(dadosLojas);
      
      if (lojas.length === 0) {
        lojasList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma loja cadastrada</p>';
        return;
      }

      lojasList.innerHTML = lojas.map(loja => `
        <div class="store-card" onclick="abrirDetalhesLoja('${loja}')">
          <h3>${loja.toUpperCase()}</h3>
          <p>${dadosLojas[loja].length} armações cadastradas</p>
          <p><small>Clique para ver detalhes</small></p>
        </div>
      `).join('');
    }

    function filtrarLojas() {
      const termo = document.getElementById('search-store').value.toLowerCase();
      const lojas = Object.keys(dadosLojas);
      const lojasFiltradas = lojas.filter(loja => 
        loja.toLowerCase().includes(termo)
      );
      
      const lojasList = document.getElementById('lojas-list');
      lojasList.innerHTML = lojasFiltradas.map(loja => `
        <div class="store-card" onclick="abrirDetalhesLoja('${loja}')">
          <h3>${loja.toUpperCase()}</h3>
          <p>${dadosLojas[loja].length} armações cadastradas</p>
          <p><small>Clique para ver detalhes</small></p>
        </div>
      `).join('');
    }

    function abrirDetalhesLoja(lojaId) {
      lojaAtual = lojaId;
      document.getElementById('lojas-container').classList.remove('active-section');
      document.getElementById('armacoes-container').classList.add('active-section');
      document.getElementById('current-store-name').textContent = lojaId.toUpperCase();
      
      // Preencher o campo empresa no formulário
      document.getElementById('empresa').value = lojaId;
      
      carregarArmacoes(lojaId);
      carregarFiltros(lojaId);
    }

    function carregarFiltros(lojaId) {
      const armacoes = dadosLojas[lojaId] || [];
      const marcas = [...new Set(armacoes.map(a => a.marca))];
      const categorias = [...new Set(armacoes.map(a => a.categoria))];
      
      const filterBrand = document.getElementById('filter-brand');
      const filterCategory = document.getElementById('filter-category');
      
      filterBrand.innerHTML = '<option value="">Todas as Marcas</option>';
      filterCategory.innerHTML = '<option value="">Todas as Categorias</option>';
      
      marcas.forEach(marca => {
        filterBrand.innerHTML += `<option value="${marca}">${marca}</option>`;
      });
      
      categorias.forEach(categoria => {
        filterCategory.innerHTML += `<option value="${categoria}">${categoria}</option>`;
      });
    }

    function carregarArmacoes(lojaId) {
      const armacoesList = document.getElementById('armacoes-list');
      const armacoes = dadosLojas[lojaId] || [];
      
      if (armacoes.length === 0) {
        armacoesList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma armação cadastrada nesta loja</p>';
        return;
      }

      armacoesList.innerHTML = armacoes.map(armacao => `
        <div class="frame-card">
          <h4>${armacao.modelo}</h4>
          <p><strong>Marca:</strong> ${armacao.marca}</p>
          <p><strong>Quantidade:</strong> ${armacao.quantidade}</p>
          <p><strong>Preço:</strong> ${armacao.preco}</p>
          <p><strong>Categoria:</strong> ${armacao.categoria}</p>
        </div>
      `).join('');
    }

    function filtrarArmacoes() {
      if (!lojaAtual) return;
      
      const termo = document.getElementById('search-frame').value.toLowerCase();
      const marcaFiltro = document.getElementById('filter-brand').value;
      const categoriaFiltro = document.getElementById('filter-category').value;
      const precoFiltro = document.getElementById('filter-price').value;
      const quantidadeFiltro = document.getElementById('filter-quantity').value;
      
      const armacoes = dadosLojas[lojaAtual] || [];
      const armacoesFiltradas = armacoes.filter(armacao => {
        // Filtro por texto
        const textoMatch = armacao.modelo.toLowerCase().includes(termo) || 
                          armacao.marca.toLowerCase().includes(termo);
        
        // Filtro por marca
        const marcaMatch = !marcaFiltro || armacao.marca === marcaFiltro;
        
        // Filtro por categoria
        const categoriaMatch = !categoriaFiltro || armacao.categoria === categoriaFiltro;
        
        // Filtro por preço
        let precoMatch = true;
        if (precoFiltro) {
          const precoNum = parseFloat(armacao.preco.replace('R$', '').replace(',', '.').trim());
          const [min, max] = precoFiltro.split('-').map(Number);
          precoMatch = precoNum >= min && precoNum <= max;
        }
        
        // Filtro por quantidade
        let quantidadeMatch = true;
        if (quantidadeFiltro) {
          const [min, max] = quantidadeFiltro.split('-').map(Number);
          quantidadeMatch = armacao.quantidade >= min && armacao.quantidade <= max;
        }
        
        return textoMatch && marcaMatch && categoriaMatch && precoMatch && quantidadeMatch;
      });
      
      const armacoesList = document.getElementById('armacoes-list');
      
      if (armacoesFiltradas.length === 0) {
        armacoesList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma armação encontrada</p>';
        return;
      }
      
      armacoesList.innerHTML = armacoesFiltradas.map(armacao => `
        <div class="frame-card">
          <h4>${armacao.modelo}</h4>
          <p><strong>Marca:</strong> ${armacao.marca}</p>
          <p><strong>Quantidade:</strong> ${armacao.quantidade}</p>
          <p><strong>Preço:</strong> ${armacao.preco}</p>
          <p><strong>Categoria:</strong> ${armacao.categoria}</p>
        </div>
      `).join('');
    }

    async function salvarArmacao(event) {
      event.preventDefault();
      
      const empresa = document.getElementById('empresa').value;
      const marca = document.getElementById('marca').value;
      const modelo = document.getElementById('modelo').value;
      const quantidade = document.getElementById('quantidade').value;
      const acao = document.getElementById('acao').value;
      const msgRetorno = document.getElementById('msgRetorno');
      
      const armacao = {
        loja: empresa,
        marca: marca,
        modelo: modelo,
        quantidade: parseInt(quantidade),
        action: acao
      };
      
      try {
        const resultado = await salvarNaPlanilha(armacao);
        msgRetorno.textContent = resultado.message || "Salvo com sucesso!";
        msgRetorno.style.color = resultado.status === "error" ? "red" : "green";
        
        // Recarregar os dados e a visualização
        if (lojaAtual) {
          await carregarDados();
          carregarArmacoes(lojaAtual);
          carregarFiltros(lojaAtual);
        }
        
        // Limpar o formulário
        document.getElementById('marca').value = '';
        document.getElementById('modelo').value = '';
        document.getElementById('quantidade').value = '';
        
      } catch (error) {
        msgRetorno.textContent = "Erro ao salvar: " + error.message;
        msgRetorno.style.color = "red";
      }
    }

    // ========== EVENT LISTENERS ==========
    document.addEventListener('DOMContentLoaded', function() {
      // Botão voltar para lojas
      document.getElementById('back-to-stores').addEventListener('click', function() {
        document.getElementById('armacoes-container').classList.remove('active-section');
        document.getElementById('lojas-container').classList.add('active-section');
        lojaAtual = null;
      });
      
      // Verificar se já está logado
      const usuarioSalvo = localStorage.getItem('usuarioLogado');
      if (usuarioSalvo) {
        usuarioLogado = usuarioSalvo;
        document.getElementById('login-container').style.display = 'none';
        document.getElementById('dashboard').style.display = 'block';
        document.querySelector('.username').textContent = usuarioSalvo;
        
        carregarDados().then(() => {
          carregarLojas();
        });
      }
    });
  </script>
</body>
</html>
