<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Controle de Estoque | √ìticas Diniz</title>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600;700&display=swap" rel="stylesheet"/>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"/>
  <style>
    :root {
      --primary: #2a4365;
      --secondary: #4299e1;
      --light: #ebf8ff;
      --dark: #1a365d;
      --success: #48bb78;
      --warning: #ed8936;
      --danger: #e53e3e;
    }
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body { font-family: 'Montserrat', sans-serif; background-color: #f0f4f8; color: #2d3748; line-height: 1.6; }

    /* LOGIN */
    #login-container { display: flex; justify-content: center; align-items: center; height: 100vh; }
    #loginForm { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 4px 10px rgba(0,0,0,0.1); text-align: center; width: 320px; }
    #loginForm h2 { margin-bottom: 20px; color: var(--primary); }
    #loginForm input { width: 100%; padding: 10px; margin: 8px 0; border: 1px solid #ccc; border-radius: 6px; }
    #loginForm button { width: 100%; padding: 10px; background: var(--secondary); color: white; border: none; border-radius: 6px; cursor: pointer; font-weight: 600; margin-top: 10px; }
    #loginForm button:hover { background: var(--primary); }
    .error-msg { color: red; font-size: 14px; margin-top: 10px; min-height: 18px; }

    /* DASHBOARD */
    .container { max-width: 1200px; margin: 0 auto; padding: 20px; display: none; }
    header { display: flex; justify-content: space-between; align-items: center; padding: 20px 0; border-bottom: 1px solid #e2e8f0; margin-bottom: 30px; }
    .logo { display: flex; align-items: center; gap: 15px; }
    .logo h1 { font-size: 24px; font-weight: 700; }
    .logo h1 span { color: var(--secondary); font-weight: 600; }
    .user-menu { position: relative; display: flex; align-items: center; gap: 10px; cursor: pointer; padding: 8px 12px; border-radius: 6px; }
    .user-menu:hover { background: var(--light); }
    .user-dropdown { position: absolute; top: 100%; right: 0; background: white; border: 1px solid #e2e8f0; border-radius: 6px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); min-width: 150px; display: none; z-index: 1000; }
    .user-dropdown.show { display: block; }
    .user-dropdown button { width: 100%; padding: 10px 15px; background: none; border: none; text-align: left; cursor: pointer; color: var(--dark); }
    .user-dropdown button:hover { background: var(--light); }
    .user-dropdown button.logout { color: var(--danger); border-top: 1px solid #e2e8f0; }
    .user-dropdown button.logout:hover { background: #fed7d7; }

    .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px; }
    .section-header h2 { font-size: 20px; color: var(--primary); }
    .section-header h2 i { margin-right: 10px; color: var(--secondary); }

    .search-box { position: relative; width: 250px; }
    .search-box i { position: absolute; left: 12px; top: 50%; transform: translateY(-50%); color: #a0aec0; }
    .search-box input { width: 100%; padding: 10px 15px 10px 35px; border: 1px solid #e2e8f0; border-radius: 6px; font-size: 14px; }

    .grid-container { display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 20px; }
    .store-card { background: white; border-radius: 8px; padding: 20px; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05); transition: all 0.3s ease; cursor: pointer; }
    .store-card:hover { transform: translateY(-3px); box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1); }
    .store-card h3 { font-size: 18px; margin-bottom: 10px; color: var(--primary); }
    .store-card p { color: #718096; font-size: 14px; }

    .frame-card { background: white; border-radius: 8px; padding: 15px; box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05); position: relative; }
    .frame-card h4 { font-size: 16px; margin-bottom: 5px; color: var(--primary); }
    .frame-card p { font-size: 14px; color: #718096; margin-bottom: 5px; }
    .frame-card .frame-price { font-weight: 600; color: var(--dark); }
    .frame-card .frame-actions { position: absolute; top: 10px; right: 10px; display: flex; gap: 5px; }
    .frame-card .btn-remove { background: var(--danger); color: white; border: none; border-radius: 4px; width: 25px; height: 25px; cursor: pointer; display: flex; align-items: center; justify-content: center; font-size: 12px; }
    .frame-card .btn-remove:hover { background: #c53030; }

    .btn-back { background: var(--light); color: var(--primary); border: none; padding: 8px 15px; border-radius: 6px; cursor: pointer; display: flex; align-items: center; gap: 5px; font-weight: 600; }
    .btn-back:hover { background: #bee3f8; }
    .actions { display: flex; align-items: center; gap: 15px; }

    footer { text-align: center; padding: 20px 0; margin-top: 40px; border-top: 1px solid #e2e8f0; color: #718096; font-size: 14px; }

    #armacoes-container { display: none; }
    .active-section { display: block !important; animation: fadeIn 0.3s ease; }
    @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }

    /* Estilo para filtros */
    .filters { display: flex; flex-wrap: wrap; gap: 12px; margin: 15px 0; }
    .filters select { padding: 8px; border: 1px solid #ccc; border-radius: 6px; font-size: 14px; background: white; cursor: pointer; }
    .filters select:hover { border-color: #4299e1; }

    /* Loading */
    .loading { text-align: center; padding: 20px; color: var(--secondary); }
    .loading i { font-size: 24px; margin-bottom: 10px; }

    /* Tabs */
    .tabs { display: flex; border-bottom: 1px solid #e2e8f0; margin-bottom: 20px; }
    .tab { padding: 10px 20px; cursor: pointer; border-bottom: 2px solid transparent; }
    .tab.active { border-bottom-color: var(--secondary); color: var(--secondary); font-weight: 600; }
    .tab-content { display: none; }
    .tab-content.active { display: block; }

    /* Form styles */
    .form-group { margin-bottom: 15px; }
    .form-group label { display: block; margin-bottom: 5px; font-weight: 600; color: var(--dark); }
    .form-group input, .form-group select { width: 100%; padding: 8px 12px; border: 1px solid #e2e8f0; border-radius: 6px; font-size: 14px; }
    .btn { padding: 10px 20px; border: none; border-radius: 6px; cursor: pointer; font-weight: 600; }
    .btn-primary { background: var(--secondary); color: white; }
    .btn-primary:hover { background: var(--primary); }
    .btn-danger { background: var(--danger); color: white; }
    .btn-danger:hover { background: #c53030; }
  </style>
</head>
<body>
  <!-- LOGIN -->
  <div id="login-container">
    <form id="loginForm">
      <h2>üîí Acesso Restrito</h2>
      <input id="usuario" type="text" placeholder="Usu√°rio" required />
      <input id="senha" type="password" placeholder="Senha" required />
      <button type="submit">Entrar</button>
      <p id="errorMsg" class="error-msg"></p>
    </form>
  </div>

  <!-- DASHBOARD -->
  <div id="dashboard" class="container">
    <header class="dashboard-header">
      <div class="logo">
        <h1>Controle de <span>Estoque</span></h1>
      </div>
      <div class="user-menu" id="user-menu">
        <span class="username">Admin</span>
        <i class="fas fa-user-circle"></i>
        <i class="fas fa-chevron-down" style="font-size: 12px;"></i>
        <div class="user-dropdown" id="user-dropdown">
          <button class="logout" onclick="fazerLogout()">
            <i class="fas fa-sign-out-alt"></i> Sair
          </button>
        </div>
      </div>
    </header>
    <main class="content">
      <div id="lojas-container" class="active-section">
        <div class="section-header">
          <h2><i class="fas fa-store"></i> Nossas Lojas</h2>
          <div class="search-box">
            <i class="fas fa-search"></i>
            <input id="search-store" type="text" placeholder="Buscar loja..." />
          </div>
        </div>
        <div id="lojas-list" class="grid-container">
          <div class="loading">
            <i class="fas fa-spinner fa-spin"></i>
            <p>Carregando lojas...</p>
          </div>
        </div>
      </div>

      <div id="armacoes-container">
        <div class="section-header">
          <h2><i class="fas fa-glasses"></i> Arma√ß√µes: <span id="current-store-name"></span></h2>
          <div class="actions">
            <button id="back-to-stores" class="btn-back"><i class="fas fa-arrow-left"></i> Voltar</button>
            <div class="search-box">
              <i class="fas fa-search"></i>
              <input id="search-frame" type="text" placeholder="Buscar arma√ß√£o..." />
            </div>
          </div>
        </div>

        <!-- TABS -->
        <div class="tabs">
          <div class="tab active" data-tab="lista">Lista de Arma√ß√µes</div>
          <div class="tab" data-tab="cadastro">Cadastrar Arma√ß√£o</div>
          <div class="tab" data-tab="entrada-saida">Entrada/Sa√≠da</div>
        </div>

        <!-- TAB 1: LISTA DE ARMA√á√ïES -->
        <div class="tab-content active" id="tab-lista">
          <!-- FILTROS -->
          <div class="filters">
            <select id="filter-brand">
              <option value="">Todas as Marcas</option>
            </select>
            <select id="filter-category">
              <option value="">Todas as Categorias</option>
            </select>
            <select id="filter-price">
              <option value="">Todos os Pre√ßos</option>
              <option value="0-199">At√© R$ 199</option>
              <option value="200-299">R$ 200 a R$ 299</option>
              <option value="300-399">R$ 300 a R$ 399</option>
              <option value="400-9999">Acima de R$ 400</option>
            </select>
            <select id="filter-quantity">
              <option value="">Todas as Quantidades</option>
              <option value="1-5">1 a 5</option>
              <option value="6-10">6 a 10</option>
              <option value="11-999">Mais de 10</option>
            </select>
          </div>
          <div id="armacoes-list" class="grid-container"></div>
        </div>

        <!-- TAB 2: CADASTRAR ARMA√á√ÉO -->
        <div class="tab-content" id="tab-cadastro">
          <div style="background:#fff; padding:20px; border-radius:8px; box-shadow:0 2px 6px rgba(0,0,0,0.1);">
            <h3 style="margin-bottom:15px; color:#2a4365;">‚ûï Cadastrar Nova Arma√ß√£o</h3>
            <form id="formCadastro">
              <div class="form-group">
                <label for="cadastro-marca">Marca *</label>
                <input type="text" id="cadastro-marca" placeholder="Ex: Ray-Ban" required>
              </div>
              <div class="form-group">
                <label for="cadastro-modelo">Modelo *</label>
                <input type="text" id="cadastro-modelo" placeholder="Ex: Aviador" required>
              </div>
              <div class="form-group">
                <label for="cadastro-quantidade">Quantidade Inicial *</label>
                <input type="number" id="cadastro-quantidade" placeholder="Ex: 10" required min="0">
              </div>
              <div class="form-group">
                <label for="cadastro-preco">Pre√ßo (R$)</label>
                <input type="text" id="cadastro-preco" placeholder="Ex: 350,00">
              </div>
              <div class="form-group">
                <label for="cadastro-categoria">Categoria</label>
                <input type="text" id="cadastro-categoria" placeholder="Ex: Luxo">
              </div>
              <button type="submit" class="btn btn-primary">Cadastrar Arma√ß√£o</button>
            </form>
            <p id="msgCadastro" style="margin-top:10px; font-weight:600;"></p>
          </div>
        </div>

        <!-- TAB 3: ENTRADA/SA√çDA -->
        <div class="tab-content" id="tab-entrada-saida">
          <div style="background:#fff; padding:20px; border-radius:8px; box-shadow:0 2px 6px rgba(0,0,0,0.1);">
            <h3 style="margin-bottom:15px; color:#2a4365;">üìä Entrada/Sa√≠da de Estoque</h3>
            <form id="formMovimentacao">
              <div class="form-group">
                <label for="movimentacao-marca">Marca *</label>
                <input type="text" id="movimentacao-marca" placeholder="Ex: Ray-Ban" required>
              </div>
              <div class="form-group">
                <label for="movimentacao-modelo">Modelo *</label>
                <input type="text" id="movimentacao-modelo" placeholder="Ex: Aviador" required>
              </div>
              <div class="form-group">
                <label for="movimentacao-tipo">Tipo de Movimenta√ß√£o *</label>
                <select id="movimentacao-tipo" required>
                  <option value="entrada">Entrada no Estoque</option>
                  <option value="saida">Sa√≠da do Estoque</option>
                </select>
              </div>
              <div class="form-group">
                <label for="movimentacao-quantidade">Quantidade *</label>
                <input type="number" id="movimentacao-quantidade" placeholder="Ex: 5" required min="1">
              </div>
              <button type="submit" class="btn btn-primary">Registrar Movimenta√ß√£o</button>
            </form>
            <p id="msgMovimentacao" style="margin-top:10px; font-weight:600;"></p>
          </div>
        </div>
      </div>
    </main>
    <footer class="dashboard-footer">
      <p>Sistema de Controle de Estoque v1.0</p>
      <p>¬© 2025 Diniz √ìticas - Todos os direitos reservados</p>
    </footer>
  </div>

  <script>
    const API_URL = "https://script.google.com/macros/s/AKfycbxFGsap0ifhvlK4WuyyGpMAVatErHO-taoFjaMEqqygZ3vSLgE0Qx_4OhWluzVpmGn8sA/exec";
    
    let dadosLojas = {};
    let usuarioLogado = null;
    let lojaAtual = null;

    // ========== FUN√á√ïES DE AUTENTICA√á√ÉO ==========
    function processarLogin(event) {
      event.preventDefault();
      const usuario = document.getElementById('usuario').value;
      const senha = document.getElementById('senha').value;
      const errorMsg = document.getElementById('errorMsg');

      if (usuario === 'admin' && senha === '1234') {
        usuarioLogado = usuario;
        document.getElementById('login-container').style.display = 'none';
        document.getElementById('dashboard').style.display = 'block';
        document.querySelector('.username').textContent = usuario;
        
        carregarDados();
        errorMsg.textContent = '';
      } else {
        errorMsg.textContent = 'Usu√°rio ou senha incorretos!';
      }
    }

    function fazerLogout() {
      usuarioLogado = null;
      document.getElementById('dashboard').style.display = 'none';
      document.getElementById('login-container').style.display = 'flex';
      document.getElementById('usuario').value = '';
      document.getElementById('senha').value = '';
      document.getElementById('user-dropdown').classList.remove('show');
    }

    // ========== FUN√á√ïES DE DADOS ==========
    function salvarLocal() {
      localStorage.setItem("dadosLojas", JSON.stringify(dadosLojas));
    }

    async function carregarDados() {
      const lojasList = document.getElementById('lojas-list');
      
      try {
        const response = await fetch(API_URL);
        const textoResposta = await response.text();
        
        let dadosAPI;
        try {
          dadosAPI = JSON.parse(textoResposta);
        } catch (parseError) {
          throw new Error("Resposta n√£o √© JSON v√°lido");
        }
        
        // Se retornar dados de usu√°rio, ignora
        if (dadosAPI && dadosAPI.usuario === "admin") {
          throw new Error("API retornando dados de configura√ß√£o");
        }
        
        dadosLojas = {};
        
        if (Array.isArray(dadosAPI)) {
          dadosAPI.forEach((item, index) => {
            if (index === 0) return;
            
            const loja = item[0] || "Loja Desconhecida";
            const marca = item[1] || "Sem marca";
            const quantidade = parseInt(item[2]) || 0;
            const modelo = item[3] || "Sem modelo";
            const preco = item[4] || "R$ 0,00";
            const categoria = item[5] || "Geral";
            
            if (!dadosLojas[loja]) dadosLojas[loja] = [];
            
            // VERIFICA se j√° existe esta arma√ß√£o na loja
            const arma√ß√£oExistente = dadosLojas[loja].find(a => 
              a.marca === marca && a.modelo === modelo
            );
            
            if (arma√ß√£oExistente) {
              // Atualiza a quantidade se j√° existir
              arma√ß√£oExistente.quantidade += quantidade;
            } else if (modelo && modelo !== "Sem modelo") {
              // Adiciona nova arma√ß√£o
              dadosLojas[loja].push({
                modelo: modelo,
                marca: marca,
                quantidade: quantidade,
                preco: preco,
                categoria: categoria
              });
            }
          });
        }
        
        salvarLocal();
        carregarLojas();
        
      } catch (err) {
        console.warn("Erro ao carregar da planilha, usando localStorage:", err);
        
        dadosLojas = JSON.parse(localStorage.getItem("dadosLojas")) || {};
        
        if (Object.keys(dadosLojas).length === 0) {
          dadosLojas = {
            "PRIMITIVA 1": [
              { modelo: "Ray-Ban Aviador", marca: "Ray-Ban", quantidade: 15, preco: "R$ 350,00", categoria: "Luxo" },
              { modelo: "Oakley Holbrook", marca: "Oakley", quantidade: 8, preco: "R$ 280,00", categoria: "Esportiva" }
            ],
            "DNIZ CENTRO": [
              { modelo: "Charmant Elegance", marca: "Charmant", quantidade: 12, preco: "R$ 190,00", categoria: "Acetato" }
            ]
          };
          salvarLocal();
        }
        
        carregarLojas();
      }
    }

    // ========== FUN√á√ïES DA INTERFACE ==========
    function carregarLojas() {
      const lojasList = document.getElementById('lojas-list');
      const lojas = Object.keys(dadosLojas);
      
      if (lojas.length === 0) {
        lojasList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma loja cadastrada</p>';
        return;
      }

      lojasList.innerHTML = lojas.map(loja => {
        const totalArma√ß√µes = dadosLojas[loja].length;
        const totalQuantidade = dadosLojas[loja].reduce((sum, item) => sum + item.quantidade, 0);
        
        return `
          <div class="store-card" onclick="abrirDetalhesLoja('${loja}')">
            <h3>${loja.toUpperCase()}</h3>
            <p><strong>${totalArma√ß√µes}</strong> modelos de arma√ß√µes</p>
            <p><strong>${totalQuantidade}</strong> unidades no total</p>
            <p><small>Clique para gerenciar</small></p>
          </div>
        `;
      }).join('');
    }

    function abrirDetalhesLoja(lojaId) {
      lojaAtual = lojaId;
      document.getElementById('lojas-container').classList.remove('active-section');
      document.getElementById('armacoes-container').classList.add('active-section');
      document.getElementById('current-store-name').textContent = lojaId.toUpperCase();
      
      carregarArmacoes(lojaId);
      carregarFiltros(lojaId);
      mudarTab('lista'); // Volta para a tab de lista
    }

    function carregarArmacoes(lojaId) {
      const armacoesList = document.getElementById('armacoes-list');
      const armacoes = dadosLojas[lojaId] || [];
      
      if (armacoes.length === 0) {
        armacoesList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma arma√ß√£o cadastrada nesta loja</p>';
        return;
      }

      armacoesList.innerHTML = armacoes.map(armacao => `
        <div class="frame-card">
          <div class="frame-actions">
            <button class="btn-remove" onclick="removerArmacao('${armacao.marca}', '${armacao.modelo}')" title="Remover arma√ß√£o">
              <i class="fas fa-times"></i>
            </button>
          </div>
          <h4>${armacao.modelo}</h4>
          <p><strong>Marca:</strong> ${armacao.marca}</p>
          <p><strong>Quantidade:</strong> ${armacao.quantidade} unidades</p>
          <p><strong>Pre√ßo:</strong> ${armacao.preco}</p>
          <p><strong>Categoria:</strong> ${armacao.categoria}</p>
        </div>
      `).join('');
    }

    function removerArmacao(marca, modelo) {
      if (!lojaAtual || !confirm(`Tem certeza que deseja remover ${marca} ${modelo}?`)) {
        return;
      }
      
      const loja = dadosLojas[lojaAtual];
      const index = loja.findIndex(a => a.marca === marca && a.modelo === modelo);
      
      if (index !== -1) {
        loja.splice(index, 1);
        salvarLocal();
        carregarArmacoes(lojaAtual);
        carregarLojas(); // Atualiza o card da loja
      }
    }

    // ========== FUN√á√ïES DE CADASTRO ==========
    async function cadastrarArmacao(event) {
      event.preventDefault();
      
      const marca = document.getElementById('cadastro-marca').value;
      const modelo = document.getElementById('cadastro-modelo').value;
      const quantidade = parseInt(document.getElementById('cadastro-quantidade').value);
      const preco = document.getElementById('cadastro-preco').value;
      const categoria = document.getElementById('cadastro-categoria').value;
      const msgCadastro = document.getElementById('msgCadastro');
      
      if (!lojaAtual) {
        msgCadastro.textContent = "Erro: Nenhuma loja selecionada";
        msgCadastro.style.color = "red";
        return;
      }
      
      // Verifica se j√° existe esta arma√ß√£o
      const loja = dadosLojas[lojaAtual];
      const arma√ß√£oExistente = loja.find(a => a.marca === marca && a.modelo === modelo);
      
      if (arma√ß√£oExistente) {
        msgCadastro.textContent = "Erro: Esta arma√ß√£o j√° existe na loja. Use a op√ß√£o 'Entrada/Sa√≠da' para adicionar mais unidades.";
        msgCadastro.style.color = "red";
        return;
      }
      
      const novaArmacao = {
        marca: marca,
        modelo: modelo,
        quantidade: quantidade,
        preco: preco ? `R$ ${preco}` : "R$ 0,00",
        categoria: categoria || "Geral"
      };
      
      // Adiciona localmente
      loja.push(novaArmacao);
      salvarLocal();
      
      msgCadastro.textContent = "Arma√ß√£o cadastrada com sucesso!";
      msgCadastro.style.color = "green";
      
      // Atualiza a visualiza√ß√£o
      carregarArmacoes(lojaAtual);
      carregarLojas();
      
      // Limpa o formul√°rio
      document.getElementById('cadastro-marca').value = '';
      document.getElementById('cadastro-modelo').value = '';
      document.getElementById('cadastro-quantidade').value = '';
      document.getElementById('cadastro-preco').value = '';
      document.getElementById('cadastro-categoria').value = '';
    }

    // ========== FUN√á√ïES DE MOVIMENTA√á√ÉO ==========
    async function registrarMovimentacao(event) {
      event.preventDefault();
      
      const marca = document.getElementById('movimentacao-marca').value;
      const modelo = document.getElementById('movimentacao-modelo').value;
      const tipo = document.getElementById('movimentacao-tipo').value;
      const quantidade = parseInt(document.getElementById('movimentacao-quantidade').value);
      const msgMovimentacao = document.getElementById('msgMovimentacao');
      
      if (!lojaAtual) {
        msgMovimentacao.textContent = "Erro: Nenhuma loja selecionada";
        msgMovimentacao.style.color = "red";
        return;
      }
      
      const loja = dadosLojas[lojaAtual];
      const arma√ß√£o = loja.find(a => a.marca === marca && a.modelo === modelo);
      
      if (!arma√ß√£o) {
        msgMovimentacao.textContent = "Erro: Arma√ß√£o n√£o encontrada nesta loja";
        msgMovimentacao.style.color = "red";
        return;
      }
      
      if (tipo === 'entrada') {
        arma√ß√£o.quantidade += quantidade;
        msgMovimentacao.textContent = `+${quantidade} unidades adicionadas ao estoque!`;
        msgMovimentacao.style.color = "green";
      } else {
        if (arma√ß√£o.quantidade < quantidade) {
          msgMovimentacao.textContent = "Erro: Quantidade insuficiente em estoque";
          msgMovimentacao.style.color = "red";
          return;
        }
        arma√ß√£o.quantidade -= quantidade;
        msgMovimentacao.textContent = `-${quantidade} unidades removidas do estoque!`;
        msgMovimentacao.style.color = "orange";
      }
      
      salvarLocal();
      carregarArmacoes(lojaAtual);
      carregarLojas();
      
      // Limpa o formul√°rio
      document.getElementById('movimentacao-marca').value = '';
      document.getElementById('movimentacao-modelo').value = '';
      document.getElementById('movimentacao-quantidade').value = '';
    }

    // ========== FUN√á√ïES AUXILIARES ==========
    function carregarFiltros(lojaId) {
      const armacoes = dadosLojas[lojaId] || [];
      const marcas = [...new Set(armacoes.map(a => a.marca))];
      const categorias = [...new Set(armacoes.map(a => a.categoria))];
      
      const filterBrand = document.getElementById('filter-brand');
      const filterCategory = document.getElementById('filter-category');
      
      filterBrand.innerHTML = '<option value="">Todas as Marcas</option>';
      filterCategory.innerHTML = '<option value="">Todas as Categorias</option>';
      
      marcas.forEach(marca => {
        if (marca && marca !== "Sem marca") {
          filterBrand.innerHTML += `<option value="${marca}">${marca}</option>`;
        }
      });
      
      categorias.forEach(categoria => {
        if (categoria && categoria !== "Geral") {
          filterCategory.innerHTML += `<option value="${categoria}">${categoria}</option>`;
        }
      });
    }

    function filtrarLojas() {
      const termo = document.getElementById('search-store').value.toLowerCase();
      const lojas = Object.keys(dadosLojas);
      const lojasFiltradas = lojas.filter(loja => 
        loja.toLowerCase().includes(termo)
      );
      
      const lojasList = document.getElementById('lojas-list');
      
      if (lojasFiltradas.length === 0) {
        lojasList.innerHTML = '<p style="grid-column:1/-1; text-align:center; padding:20px; color:#666;">Nenhuma loja encontrada</p>';
        return;
      }
      
      lojasList.innerHTML = lojasFiltradas.map(loja => {
        const totalArma√ß√µes = dadosLojas[loja].length;
        const totalQuantidade = dadosLojas[loja].reduce((sum, item) => sum + item.quantidade, 0);
        
        return `
          <div class="store-card" onclick="abrirDetalhesLoja('${loja}')">
            <h3>${loja.toUpperCase()}</h3>
            <p><strong>${totalArma√ß√µes}</strong> modelos de arma√ß√µes</p>
            <p><strong>${totalQuantidade}</strong> unidades no total</p>
          </div>
        `;
      }).join('');
    }

    function filtrarArmacoes() {
      // Implementa√ß√£o do filtro (mantida do c√≥digo anterior)
    }

    function mudarTab(tabName) {
      // Esconde todas as tabs
      document.querySelectorAll('.tab-content').forEach(tab => {
        tab.classList.remove('active');
      });
      document.querySelectorAll('.tab').forEach(tab => {
        tab.classList.remove('active');
      });
      
      // Mostra a tab selecionada
      document.getElementById(`tab-${tabName}`).classList.add('active');
      document.querySelector(`[data-tab="${tabName}"]`).classList.add('active');
    }

    // ========== EVENT LISTENERS ==========
    document.addEventListener('DOMContentLoaded', function() {
      // Login form
      document.getElementById('loginForm').addEventListener('submit', processarLogin);
      
      // User menu dropdown
      document.getElementById('user-menu').addEventListener('click', function(e) {
        e.stopPropagation();
        document.getElementById('user-dropdown').classList.toggle('show');
      });
      
      // Fecha dropdown ao clicar fora
      document.addEventListener('click', function() {
        document.getElementById('user-dropdown').classList.remove('show');
      });
      
      // Bot√£o voltar para lojas
      document.getElementById('back-to-stores').addEventListener('click', function() {
        document.getElementById('armacoes-container').classList.remove('active-section');
        document.getElementById('lojas-container').classList.add('active-section');
        lojaAtual = null;
      });
      
      // Search stores
      document.getElementById('search-store').addEventListener('keyup', filtrarLojas);
      
      // Tabs
      document.querySelectorAll('.tab').forEach(tab => {
        tab.addEventListener('click', function() {
          mudarTab(this.getAttribute('data-tab'));
        });
      });
      
      // Form cadastro
      document.getElementById('formCadastro').addEventListener('submit', cadastrarArmacao);
      
      // Form movimenta√ß√£o
      document.getElementById('formMovimentacao').addEventListener('submit', registrarMovimentacao);
    });
  </script>
</body>
</html>
